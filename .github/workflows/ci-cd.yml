name: Android Release CI/CD
on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
  release:
    types:
      - created

jobs:
  build:
    name: Build and Release APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Build APK
        run: ./gradlew assembleRelease

      - name: Upload APK artifact
        uses: actions/upload-artifact@v2
        with:
          name: release-apk
          path: app/build/outputs/apk/release/*.apk

  upload-to-cloud:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Upload APK to Cloud Storage
        uses: actions/upload-artifact@v2
        with:
          name: release-apk
          path: app/build/outputs/apk/release/*.apk

      - name: Get APK URL
        id: get_apk_url
        run: echo "::set-output name=url::$(echo ${{ steps.upload-to-cloud.outputs.artifact-upload-path }} | cut -c 2-)"

  release:
    needs: upload-to-cloud
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: git config --global user.email "actions@github.com" && git config --global user.name "GitHub Actions"

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v2
        with:
          name: release-apk
          path: app/build/outputs/apk/release/*.apk
      - name: Set up Git
        run: git config --global user.email "actions@github.com" && git config --global user.name "GitHub Actions"

      - name: Download APK
        run: |
          RELEASE_TAG=savee_dev
          ASSET_NAME=release-apk.zip

          RELEASE_ID=$(curl -s -H "Authorization: token ${{ secrets.REPO_ACCESS_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases/tags/$RELEASE_TAG" | jq -r '.id')
          DOWNLOAD_URL=$(curl -s -H "Authorization: token ${{ secrets.REPO_ACCESS_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/releases/$RELEASE_ID/assets" | jq -r ".[] | select(.name == \"$ASSET_NAME\") | .browser_download_url")
          curl -LJO -H "Authorization: token ${{ secrets.REPO_ACCESS_TOKEN }}" "$DOWNLOAD_URL"
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
