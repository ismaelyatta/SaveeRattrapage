name: Android Release CI/CD

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
  release:
    types:
      - created

jobs:
  build:
    name: Build and Release APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Build APK
        run: ./gradlew assembleRelease

      - name: Upload APK artifact
        uses: actions/upload-artifact@v2
        with:
          name: release-apk
          path: app/build/outputs/apk/release/*.apk

  upload-to-cloud:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Upload APK to Cloud Storage
        uses: actions/upload-artifact@v2
        with:
          name: release-apk
          path: app/build/outputs/apk/release/*.apk

      - name: Get APK URL
        id: get_apk_url
        run: echo "::set-output name=url::$(echo ${{ steps.upload-to-cloud.outputs.artifact-upload-path }} | cut -c 2-)"

  release:
    permissions: write-all
    name: release
    environment: dev
    needs: upload-to-cloud
    # needs: pre-pkr
    runs-on: ubuntu-latest

    steps:

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get registration token
        id: getRegToken
        run: |
            curl -X POST -H \"Accept: application/vnd.github.v3+json\"  -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/myprofile/myrepo/actions/runners/registration-token  

      - name: Set up Git
        run: git config --global user.email "actions@github.com" && git config --global user.name "GitHub Actions"

      - name: Build debug APK
        run: bash ./gradlew assembleDebug --stacktrace
      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
            name: app
            path: app/build/outputs/apk/debug/app-debug.apk

  download:
      runs-on: ubuntu-latest
      needs: release
      name: download

  steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Download APK Artifact
        uses: actions/download-artifact@v1
        with:
           name: app
           path: downloaded-apk/

      - name: List downloaded files
        run: ls downloaded-apk/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
              tag_name: dev_app
              release_name: Release dev_app
              body: |
                  Changes in this Release
                  - First Change
                  - Second Change
              draft: false
              release: false
