name: Android Release CI/CD

on:
  push:
    branches:
      - main
      - dev
  pull_request:
    branches:
      - main
      - dev
  release:
    types:
      - created

jobs:
  build:
    name: Build and Release APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Build APK
        run: ./gradlew assembleRelease

      - name: Upload APK artifact
        uses: actions/upload-artifact@v2
        with:
          name: release-apk
          path: app/build/outputs/apk/release/*.apk

  upload-to-cloud:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Upload APK to Cloud Storage
        uses: actions/upload-artifact@v2
        with:
          name: release-apk
          path: app/build/outputs/apk/release/*.apk

      - name: Get APK URL
        id: get_apk_url
        run: echo "::set-output name=url::$(echo ${{ steps.upload-to-cloud.outputs.artifact-upload-path }} | cut -c 2-)"

  release:
    needs: upload-to-cloud
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Git
        run: git config --global user.email "actions@github.com" && git config --global user.name "GitHub Actions"

      - name: Build debug APK
        run: bash ./gradlew assembleDebug --stacktrace
      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
            name: app
            path: app/build/outputs/apk/debug/app-debug.apk
      - name: Download APK
        uses: actions/download-artifact@v2
        with:
          name: app
          path: downloaded-apk/
      - name: Get Upload URL
        id: upload_url
        run: echo "::set-output name=upload_url::$(jq -r '.upload_url' $GITHUB_EVENT_PATH | sed -e 's/{?name,label}//')"

      - name: Upload APK to Release
        uses: actions/upload-release-asset@v1
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
           upload_url: ${{ steps.upload_url.outputs.upload_url }}
           asset_path: ${{ steps.download_artifact.outputs.artifact_paths }}
           asset_name: app-debug.apk
           asset_content_type: application/vnd.android.package-archive