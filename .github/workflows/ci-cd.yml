name: Android Release CI/CD

on:
  push:
    branches:
      - main
      - dev
    tags:

  pull_request:
    branches:
      - main
      - dev
  release:
    types:
      - created

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    environment: dev
    permissions: write-all



    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get registration token
        id: getRegToken
        run: |
            curl -X POST -H \"Accept: application/vnd.github.v3+json\"  -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/myprofile/myrepo/actions/runners/registration-token
            - name: Set up Git
              run: git config --global user.email "actions@github.com" && git config --global user.name "GitHub Actions"  

      - name: Set up JDK
        uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'adopt'

      - name: Make Gradle executable
        run: chmod +x ./gradlew

      - name: Build APK
        run: ./gradlew assembleRelease

      # ... other build steps

      - name: Upload APK artifact
        uses: actions/upload-artifact@v2
        with:
          name: release-apk
          path: app/build/outputs/apk/release/

  upload-to-cloud:
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    permissions: write-all



    steps:
    - name: Get registration token
      id: getRegToken
      run: |
            curl -X POST -H \"Accept: application/vnd.github.v3+json\"  -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/myprofile/myrepo/actions/runners/registration-token
            - name: Set up Git
              run: git config --global user.email "actions@github.com" && git config --global user.name "GitHub Actions"
    - name: Upload APK to Cloud Storage
      uses: actions/upload-artifact@v2
      with:
          name: release-apk
          path: app/build/outputs/apk/release/*.apk

    - name: Get APK URL
      id: get_apk_url
      run: echo "::set-output name=url::$(echo ${{ steps.upload-to-cloud.outputs.artifact-upload-path }} | cut -c 2-)"

  release:
    permissions: write-all
    name: release
    environment: dev
    needs: upload-to-cloud
    runs-on: ubuntu-latest

    steps:
      # ... release steps
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get registration token
        id: getRegToken
        run: |
          curl -X POST -H \"Accept: application/vnd.github.v3+json\"  -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' https://api.github.com/repos/myprofile/myrepo/actions/runners/registration-token  

      - name: Set up Git
        run: git config --global user.email "actions@github.com" && git config --global user.name "GitHub Actions"

      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
            name: app
            path: app/build/outputs/apk/debug/app-debug.apk

      - name: Upload Source Code
        uses: actions/upload-artifact@v2
        with:
            name: source-code
            path: .

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
            tag_name: dev_app
            release_name: Release ${{ github.ref }}
            body: |
              Changes in this Release
            draft: false
            prerelease: true
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
            upload_url: ${{ steps.create_release.outputs.upload_url }}
            asset_path: app/build/outputs/apk/debug/app-debug.apk
            asset_name: app-debug.apk
            asset_content_type: application/vnd.android.package-archive
        env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Source Code to Release
        uses: actions/upload-release-asset@v1
        with:
                upload_url: ${{ steps.create_release.outputs.upload_url }}
                asset_path: source-code
                asset_name: source-code.zip
                asset_content_type: source-code/zip
        env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # ... other steps